In total 1 of 2 tests failed.


---
Outcome of test 'source_r': ok
All R files could be sourced.



---
Outcome of test 'do1': not ok


Details:

cmd_df = do_parse(do_code)
cmd_df = mark_data_manip_cmd(cmd_df)

str(cmd_df)
'data.frame':	38 obs. of  9 variables:
 $ line              : int  1 2 3 4 5 6 7 8 9 10 ...
 $ do_code           : chr  "use \"data.dta\", clear" "sort group i" "keep in 1/39" "list in 1/5" ...
 $ stata_cmd_original: chr  "use" "sort" "keep" "list" ...
 $ stata_cmd         : chr  "use" "sort" "keep" "list" ...
 $ rest_of_cmd       : chr  "\"data.dta\", clear" "group i" "in 1/39" "in 1/5" ...
 $ is_by_prefix      : logi  FALSE FALSE FALSE FALSE FALSE TRUE ...
 $ by_group_vars     : chr  NA NA NA NA ...
 $ by_sort_vars      : chr  NA NA NA NA ...
 $ do_translate      : logi  TRUE TRUE TRUE FALSE FALSE TRUE ...
NULL

---
#Translate Stata to R commands... ... translation done.
---
# Run translated R commands and compare results


 1 do:  use "data.dta", clear
 1 r:  data = haven::read_dta(file.path(stata2r_env$working_dir, "data.dta")) # 'clear' was used 
data = haven::read_dta(file.path(stata2r_env$working_dir, "data.dta")) # 'clear' was used

 2 do:  sort group i
 2 r:  data = dplyr::arrange(data, group, i) 
data = dplyr::arrange(data, group, i)

 3 do:  keep in 1/39
 3 r:  data = dplyr::slice(data, 1:39) 
data = dplyr::slice(data, 1:39)

 4 do:  list in 1/5 

 4 r:  not translated since not flagged as data manipulation

 5 do:  display _n 

 5 r:  not translated since not flagged as data manipulation

 6 do:  by group: gen seq = _n
 6 r:  data = data %>%

  dplyr::group_by(dplyr::across(c("group"))) %>%

  dplyr::mutate(seq = as.numeric(dplyr::row_number())) %>%

  dplyr::ungroup()
data$seq = sfun_stata_numeric_output_round(data$seq)
data$seq = sfun_strip_stata_attributes(data$seq) 
data = data %>%

  dplyr::group_by(dplyr::across(c("group"))) %>%

  dplyr::mutate(seq = as.numeric(dplyr::row_number())) %>%

  dplyr::ungroup()

data$seq = sfun_stata_numeric_output_round(data$seq)

data$seq = sfun_strip_stata_attributes(data$seq)

 7 do:  gen logi = log(i)
 7 r:  data = data %>%

  dplyr::mutate(logi = log(i))
data$logi = sfun_stata_numeric_output_round(data$logi)
data$logi = sfun_strip_stata_attributes(data$logi) 
data = data %>%

  dplyr::mutate(logi = log(i))

data$logi = sfun_stata_numeric_output_round(data$logi)

data$logi = sfun_strip_stata_attributes(data$logi)

 8 do:  gen sqrt_i = sqrt(i)
 8 r:  data = data %>%

  dplyr::mutate(sqrt_i = sqrt(i))
data$sqrt_i = sfun_stata_numeric_output_round(data$sqrt_i)
data$sqrt_i = sfun_strip_stata_attributes(data$sqrt_i) 
data = data %>%

  dplyr::mutate(sqrt_i = sqrt(i))

data$sqrt_i = sfun_stata_numeric_output_round(data$sqrt_i)

data$sqrt_i = sfun_strip_stata_attributes(data$sqrt_i)

 9 do:  gen group_num = cond(group=="A",1,cond(group=="B",2,3))
 9 r:  data = data %>%

  dplyr::mutate(group_num = dplyr::if_else(group=="A", 1, dplyr::if_else(group=="B", 2, 3)))
data$group_num = sfun_stata_numeric_output_round(data$group_num)
data$group_num = sfun_strip_stata_attributes(data$group_num) 
data = data %>%

  dplyr::mutate(group_num = dplyr::if_else(group=="A", 1, dplyr::if_else(group=="B", 2, 3)))

data$group_num = sfun_stata_numeric_output_round(data$group_num)

data$group_num = sfun_strip_stata_attributes(data$group_num)

 10 do:  egen mean_i_grp = mean(i), by(group)
 10 r:  data = data %>%

  dplyr::group_by(dplyr::across(
c("group")
)) %>%

  dplyr::mutate(
mean_i_grp = mean(i, na.rm = TRUE)
) %>%

  dplyr::ungroup()
data$mean_i_grp = sfun_strip_stata_attributes(data$mean_i_grp) 
data = data %>%

  dplyr::group_by(dplyr::across(
c("group")
)) %>%

  dplyr::mutate(
mean_i_grp = mean(i, na.rm = TRUE)
) %>%

  dplyr::ungroup()

data$mean_i_grp = sfun_strip_stata_attributes(data$mean_i_grp)

 11 do:  egen total_i = total(i)
 11 r:  data = data %>%

  dplyr::mutate(
total_i = sum(i, na.rm = TRUE)
)
data$total_i = sfun_strip_stata_attributes(data$total_i) 
data = data %>%

  dplyr::mutate(
total_i = sum(i, na.rm = TRUE)
)

data$total_i = sfun_strip_stata_attributes(data$total_i)

 12 do:  bysort group: egen rank_i = rank(i)
 12 r:  data = data %>%

  dplyr::group_by(dplyr::across(
c("group")
)) %>%

  dplyr::mutate(
rank_i = dplyr::min_rank(i)
) %>%

  dplyr::ungroup()
data$rank_i = sfun_strip_stata_attributes(data$rank_i) 
data = data %>%

  dplyr::group_by(dplyr::across(
c("group")
)) %>%

  dplyr::mutate(
rank_i = dplyr::min_rank(i)
) %>%

  dplyr::ungroup()

data$rank_i = sfun_strip_stata_attributes(data$rank_i)

 13 do:  gen flag = (i>20) if group=="A"
 13 r:  data = data %>%

  dplyr::mutate(flag = dplyr::if_else(group=="A", (i>20), NA))
data$flag = sfun_stata_numeric_output_round(data$flag)
data$flag = sfun_strip_stata_attributes(data$flag) 
data = data %>%

  dplyr::mutate(flag = dplyr::if_else(group=="A", (i>20), NA))

data$flag = sfun_stata_numeric_output_round(data$flag)

data$flag = sfun_strip_stata_attributes(data$flag)

Error: After Stata line  13 , R data set differs from Stata reference.

Data set from Stata (do_df):
tibble [39 × 10] (S3: tbl_df/tbl/data.frame)
 $ i         : num [1:39] 10 13 16 19 20 21 22 27 31 34 ...
 $ group     : chr [1:39] "A" "A" "A" "A" ...
  ..- attr(*, "label")= chr "group"
  ..- attr(*, "format.stata")= chr "%1s"
 $ seq       : num [1:39] 1 2 3 4 5 6 7 8 9 10 ...
 $ logi      : num [1:39] 2.3 2.56 2.77 2.94 3 ...
 $ sqrt_i    : num [1:39] 3.16 3.61 4 4.36 4.47 ...
 $ group_num : num [1:39] 1 1 1 1 1 1 1 1 1 1 ...
 $ mean_i_grp: num [1:39] 25.3 25.3 25.3 25.3 25.3 ...
 $ total_i   : num [1:39] 782 782 782 782 782 782 782 782 782 782 ...
 $ rank_i    : num [1:39] 1 2 3 4 5 6 7 8 9 10 ...
 $ flag      : num [1:39] 0 0 0 0 0 1 1 1 1 1 ...
 - attr(*, "label")= chr "Written by R."
NULL

Data set from R (r_df):
tibble [39 × 10] (S3: tbl_df/tbl/data.frame)
 $ i         : num [1:39] 10 13 16 19 20 21 22 27 31 34 ...
  ..- attr(*, "label")= chr "i"
  ..- attr(*, "format.stata")= chr "%9.0g"
 $ group     : chr [1:39] "A" "A" "A" "A" ...
  ..- attr(*, "label")= chr "group"
  ..- attr(*, "format.stata")= chr "%1s"
 $ seq       : num [1:39] 1 2 3 4 5 6 7 8 9 10 ...
 $ logi      : num [1:39] 2.3 2.56 2.77 2.94 3 ...
 $ sqrt_i    : num [1:39] 3.16 3.61 4 4.36 4.47 ...
 $ group_num : num [1:39] 1 1 1 1 1 1 1 1 1 1 ...
 $ mean_i_grp: num [1:39] 25.3 25.3 25.3 25.3 25.3 ...
 $ total_i   : num [1:39] 782 782 782 782 782 782 782 782 782 782 ...
 $ rank_i    : int [1:39] 1 2 3 4 5 6 7 8 9 10 ...
 $ flag      : logi [1:39] FALSE FALSE FALSE FALSE FALSE TRUE ...
NULL

Differences:List of 2
 $ identical    : logi FALSE
 $ type_mismatch:'data.frame':	1 obs. of  3 variables:
  ..$ col        : chr "flag"
  ..$ class_do_df: chr "numeric"
  ..$ class_r_df : chr "logical"
NULL
